# Generated by Django 3.2.25 on 2025-10-01 17:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import user_auth.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Name can only contain alphabets and spaces.', regex='^[A-Za-z\\s]+$')])),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('mobile', models.CharField(blank=True, max_length=35, null=True, validators=[django.core.validators.RegexValidator(code='invalid_mobile', message="Mobile number can only contain numbers and an optional leading '+'", regex='^\\+?[0-9 ]+$')])),
                ('profile_image', models.ImageField(blank=True, max_length=255, null=True, upload_to=user_auth.models.get_profile_image_path)),
                ('login_attempts', models.IntegerField(default=0)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('password_link_token', models.CharField(blank=True, max_length=255, null=True)),
                ('password_link_token_created_at', models.DateTimeField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('last_password_changed', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(choices=[('Customer', 'Customer'), ('Employee', 'Employee')], default='Customer', max_length=10)),
                ('activation_link_token', models.CharField(blank=True, max_length=255, null=True)),
                ('activation_link_token_created_at', models.DateTimeField(blank=True, null=True)),
                ('deactivated', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Name can only contain alphabets and spaces.', regex='^[A-Za-z\\s]+$')])),
                ('code_name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_code_name', message='Code name can only contain alphabets and underscores (_).', regex='^[A-Za-z_]+$')])),
                ('module_name', models.CharField(max_length=100)),
                ('module_label', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('device_token', models.TextField(blank=True, max_length=512, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_token', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Name can only contain alphabets and spaces.', regex='^[A-Za-z\\s]+$')])),
                ('code_name', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_code_name', message='Code name can only contain alphabets and underscores (_).', regex='^[A-Za-z_]+$')])),
                ('description', models.CharField(max_length=250)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='role_created_by', to=settings.AUTH_USER_MODEL)),
                ('permissions', models.ManyToManyField(related_name='_user_auth_role_permissions_+', to='user_auth.Permission')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='role_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('Invited', 'Invited'), ('Active', 'Active'), ('Deactivated', 'Deactivated')], default='Invited', max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_employee', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='role_users', to='user_auth.role'),
        ),
    ]
